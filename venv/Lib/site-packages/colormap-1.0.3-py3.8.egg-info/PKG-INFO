Metadata-Version: 1.2
Name: colormap
Version: 1.0.3
Summary: Utilities to ease manipulation of matplotlib colormaps and color codecs (e.g., hex2rgb)
Home-page: http://github.com/cokelaer/colormap
Author: Thomas Cokelaer
Author-email: cokelaer@ebi.ac.uk
Maintainer: Thomas Cokelaer
Maintainer-email: cokelaer@ebi.ac.uk
License: LGPL
Download-URL: http://pypi.python.org/pypi/colormap
Description: #############################
        COLORMAP documentation
        #############################
        
        
        Please see : http://colormap.readthedocs.io/ for an up-to-date documentation.
        
        .. image:: https://badge.fury.io/py/colormap.svg
            :target: https://pypi.python.org/pypi/colormap
        
        .. image:: https://secure.travis-ci.org/cokelaer/colormap.png
            :target: http://travis-ci.org/cokelaer/colormap
        
        .. image:: https://coveralls.io/repos/cokelaer/colormap/badge.png?branch=master
            :target: https://coveralls.io/r/cokelaer/colormap?branch=master
        
        
        :version: Python 2.7, 3.4, 3.5, 3.6, 3.7
        :contributions: Please join https://github.com/cokelaer/colormap
        :issues: Please use https://github.com/cokelaer/colormap/issues
        :notebook: Please see https://github.com/cokelaer/colormap/tree/master/notebooks
        
        
        
        What is it ?
        ################
        
        **colormap** package provides simple utilities to convert colors between
        RGB, HEX, HLS, HUV and a class to easily build colormaps for matplotlib. All
        matplotlib colormaps and some R colormaps are available altogether. The
        plot_colormap method (see below) is handy to quickly pick up a colormaps and
        the test_colormap is useful to see test a new colormap.
        
        
        Installation
        ###################
        
        ::
        
            pip install colormap
        
        Example
        ##########
        
        * Create your own colormap from red to green colors with intermediate color as
          whitish (diverging map from red to green)::
        
              c = Colormap()
              mycmap = c.cmap( {'red':[1,1,0], 'green':[0,1,.39], 'blue':[0,1,0]})
              cmap = c.test_colormap(mycmap)
        
        * Even simpler if the colormap is linear::
        
              c = Colormap()
              mycmap = c.cmap_linear('red', 'white', 'green(w3c)')
              cmap = c.test_colormap(mycmap)
        
        .. image:: http://colormap.readthedocs.io/en/latest/_images/index-1.png
            :width: 50%
            :align: center
        
        * check out the available colormaps::
        
              c = Colormap()
              c.plot_colormap('diverging')
        
        .. image:: http://colormap.readthedocs.io/en/latest/_images/colormaps.png
            :width: 50%
            :align: center
        
        See online documentation for details: http://colormap.readthedocs.io/
        
Keywords: hex2web,web2hex,hex2rgb,rgb2hex,rgb2hsv,hsv2rgb,rgb2hls,hls2rgb,colormap,colors
Platform: Linux
Platform: Unix
Platform: MacOsX
Platform: Windows
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires: matplotlib
Requires: easydev
